name: Django CI

env:
  DB_HOST: localhost
  DB_DATABASE: jerryratdb
  DB_REMOTEDATABASE: syh25csvjgoetrln
  DB_USER: dbadmin
  DB_PASSWORD: 12345
  MYSQL_ROOT_PASSWORD: root
  MYSQL_ROOT_USER: root

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - '8888:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - name: Set up MySQL
      run: |
        sudo service mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.MYSQL_ROOT_PASSWORD }} -p${{ env.MYSQL_ROOT_PASSWORD }}
        mysql -e 'CREATE DATABASE ${{ env.DB_REMOTEDATABASE }};' -u${{ env.MYSQL_ROOT_PASSWORD }} -p${{ env.MYSQL_ROOT_PASSWORD }}
        mysql -e "CREATE USER ${{ env.DB_USER }} IDENTIFIED BY '${{ env.DB_PASSWORD }}';" -u${{ env.MYSQL_ROOT_PASSWORD }} -p${{ env.MYSQL_ROOT_PASSWORD }}
        mysql -e "GRANT ALL ON *.* TO '${{ env.DB_USER }}'@'%' WITH GRANT OPTION;" -u${{ env.MYSQL_ROOT_PASSWORD }} -p${{ env.MYSQL_ROOT_PASSWORD }}
        mysql -e 'FLUSH PRIVILEGES' -u${{ env.MYSQL_ROOT_PASSWORD }} -p${{ env.MYSQL_ROOT_PASSWORD }}
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install dependencies - MacOS
      run: brew install libomp
      if: matrix.os == 'macos-latest'
    - name: Install dependencies - Ubuntu
      run: apt-get install libomp-dev
      if: matrix.os == 'ubuntu-20.04'
    - name: Migrations
      run: |
        python -m pip install tblib
        mysql --version
        cd app
        python manage.py makemigrations
        python manage.py migrate
    - name: Run Tests
      run: |
        cd app
        python manage.py test --keepdb --parallel

